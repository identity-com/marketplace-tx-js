{
  "name": "marketplace-tx",
  "version": "1.0.0",
  "description": "JS Client library for the Identity.com marketplace",
  "main": "src/marketplace-tx.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "check-ci": "npm-run-all test-with-coverage build-integration-test test-blockchain-with-coverage coverage lint",
    "check": "npm-run-all test-with-coverage integration-test-ganache coverage lint",
    "eslint": "eslint --max-warnings=0 src test",
    "lint-autofix": "eslint --fix src test",
    "coverage": "cross-env FORCE_COLOR=1 nyc report && nyc check-coverage",
    "lint": "npm run eslint",
    "test": "cross-env NODE_ENV=test mocha test/*",
    "test-with-coverage": "cross-env NODE_ENV=test nyc --reporter=none mocha test/*.js",
    "doc": "jsdoc -r -c .jsdoc.json -d doc",
    "build-integration-test": "cd node_modules/identity-com-smart-contracts && npm i && npm run build && cp artifacts/deployed/*.json ../../contracts",
    "test-blockchain": "cross-env LOCAL=true NODE_ENV=test ETH_NODE_URL='http://localhost:8545' mocha test/integration --timeout 120000",
    "test-blockchain-with-coverage": "cross-env LOCAL=true NODE_ENV=test ETH_NODE_URL='http://localhost:8545' nyc --reporter=none mocha test/integration --timeout 10000",
    "ganache-up": "docker-compose -f test/integration/docker-ganache/docker-compose.yml up -d > ganache.log",
    "ganache-down": "docker-compose -f test/integration/docker-ganache/docker-compose.yml down -v",
    "geth-up": "docker-compose -f test/integration/docker-geth/docker-compose.yml up -d > geth.log ",
    "geth-down": "docker-compose -f test/integration/docker-geth/docker-compose.yml down -v",
    "preintegration-test-ganache": "npm-run-all ganache-up build-integration-test",
    "integration-test-ganache": "npm-run-all test-blockchain-with-coverage ganache-down --continue-on-error",
    "preintegration-test-geth": "npm-run-all geth-up build-integration-test",
    "integration-test-geth": "npm-run-all test-blockchain geth-down --continue-on-error"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/identity-com/marketplace-tx-js.git"
  },
  "author": "",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/identity-com/marketplace-tx-js/issues"
  },
  "homepage": "https://github.com/identity-com/marketplace-tx-js#readme",
  "dependencies": {
    "babel-register": "^6.26.0",
    "bignumber.js": "^4.0.4",
    "ethereumjs-tx": "^1.3.3",
    "ethereumjs-util": "^5.1.2",
    "js-cache": "^1.0.2",
    "lodash": "^4.17.5",
    "make-error-cause": "^2.0.0",
    "node-fetch": "^2.2.0",
    "serialize-error": "^2.1.0",
    "truffle-contract": "^3.0.4",
    "util.promisify": "^1.0.0",
    "web3": "^0.20.1",
    "web3admin": "github:identity-com/web3admin#0.0.1"
  },
  "devDependencies": {
    "chai": "^4.1.2",
    "chai-as-promised": "^7.1.1",
    "chai-bignumber": "^2.0.2",
    "cross-env": "^5.1.3",
    "docdash": "^1.0.0",
    "eslint": "^4.18.2",
    "eslint-config-airbnb-base": "^12.1.0",
    "eslint-config-prettier": "^2.9.0",
    "eslint-plugin-import": "^2.8.0",
    "eslint-plugin-named-unassigned-functions": "0.0.2",
    "eslint-plugin-prettier": "^2.5.0",
    "fetch-mock": "^7.0.7",
    "identity-com-smart-contracts": "github:identity-com/smart-contracts",
    "jsdoc": "3.5.5",
    "longjohn": "^0.2.12",
    "mocha": "^4.1.0",
    "npm-run-all": "^4.1.3",
    "nyc": "^11.4.1",
    "prettier": "1.10.2",
    "proxyquire": "^2.1.0",
    "sinon": "^6.0.1",
    "web3-fake-provider": "^0.1.0"
  },
  "nyc": {
    "lines": 80,
    "statements": 80,
    "functions": 75,
    "branches": 60,
    "exclude": [
      "test/*"
    ]
  },
  "eslintConfig": {
    "extends": [
      "airbnb-base",
      "plugin:prettier/recommended"
    ],
    "plugins": [
      "prettier",
      "named-unassigned-functions"
    ],
    "env": {
      "node": true,
      "mocha": true
    },
    "globals": {
      "artifacts": true
    },
    "rules": {
      "max-len": [
        "error",
        {
          "code": 120
        }
      ],
      "func-names": [
        "warn",
        "never"
      ],
      "no-plusplus": [
        "error",
        {
          "allowForLoopAfterthoughts": true
        }
      ],
      "no-use-before-define": [
        "error",
        {
          "functions": false,
          "classes": true
        }
      ],
      "prettier/prettier": [
        "error",
        {
          "printWidth": 120,
          "singleQuote": true
        }
      ]
    }
  }
}
